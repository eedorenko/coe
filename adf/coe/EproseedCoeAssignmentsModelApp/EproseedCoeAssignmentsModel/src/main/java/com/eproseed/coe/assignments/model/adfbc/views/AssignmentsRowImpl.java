package com.eproseed.coe.assignments.model.adfbc.views;

import com.eproseed.coe.assignments.model.adfbc.views.common.AssignmentsRow;
import com.eproseed.coe.common.hrmodel.adfbc.entities.EmployeesImpl;
import com.eproseed.coe.common.model.adfbc.base.CoeEntityImpl;
import com.eproseed.coe.common.model.adfbc.base.CoeViewRowImpl;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Sep 06 14:25:08 CEST 2016
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssignmentsRowImpl extends CoeViewRowImpl implements AssignmentsRow {
    public static final int ENTITY_ASSIGNMENTS = 0;
    public static final int ENTITY_PROJECTS = 1;
    public static final int ENTITY_EMPLOYEES = 2;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        AssignmentId,
        BusinessDate,
        EmployeeId,
        Finishtime,
        ProjectId,
        Starttime,
        ProjectName,
        ProjectId1,
        FirstName,
        EmployeeId1,
        LastName,
        IsApproved,
        ProjectsLookup,
        EmployeesLookup;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int ASSIGNMENTID = AttributesEnum.AssignmentId.index();
    public static final int BUSINESSDATE = AttributesEnum.BusinessDate.index();
    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int FINISHTIME = AttributesEnum.Finishtime.index();
    public static final int PROJECTID = AttributesEnum.ProjectId.index();
    public static final int STARTTIME = AttributesEnum.Starttime.index();
    public static final int PROJECTNAME = AttributesEnum.ProjectName.index();
    public static final int PROJECTID1 = AttributesEnum.ProjectId1.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int EMPLOYEEID1 = AttributesEnum.EmployeeId1.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int ISAPPROVED = AttributesEnum.IsApproved.index();
    public static final int PROJECTSLOOKUP = AttributesEnum.ProjectsLookup.index();
    public static final int EMPLOYEESLOOKUP = AttributesEnum.EmployeesLookup.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AssignmentsRowImpl() {
    }

    /**
     * Gets Assignments entity object.
     * @return the Assignments
     */
    public com.eproseed.coe.assignments.model.adfbc.entities.AssignmentsImpl getAssignments() {
        return (com.eproseed.coe.assignments.model.adfbc.entities.AssignmentsImpl) getEntity(ENTITY_ASSIGNMENTS);
    }

    /**
     * Gets Projects entity object.
     * @return the Projects
     */
    public CoeEntityImpl getProjects() {
        return (CoeEntityImpl) getEntity(ENTITY_PROJECTS);
    }

    /**
     * Gets Employees entity object.
     * @return the Employees
     */
    public EmployeesImpl getEmployees() {
        return (EmployeesImpl) getEntity(ENTITY_EMPLOYEES);
    }

    /**
     * Gets the attribute value for ASSIGNMENT_ID using the alias name AssignmentId.
     * @return the ASSIGNMENT_ID
     */
    public Long getAssignmentId() {
        return (Long) getAttributeInternal(ASSIGNMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ASSIGNMENT_ID using the alias name AssignmentId.
     * @param value value to set the ASSIGNMENT_ID
     */
    public void setAssignmentId(Long value) {
        setAttributeInternal(ASSIGNMENTID, value);
    }

    /**
     * Gets the attribute value for BUSINESS_DATE using the alias name BusinessDate.
     * @return the BUSINESS_DATE
     */
    public Timestamp getBusinessDate() {
        return (Timestamp) getAttributeInternal(BUSINESSDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BUSINESS_DATE using the alias name BusinessDate.
     * @param value value to set the BUSINESS_DATE
     */
    public void setBusinessDate(Timestamp value) {
        setAttributeInternal(BUSINESSDATE, value);
    }

    /**
     * Gets the attribute value for EMPLOYEE_ID using the alias name EmployeeId.
     * @return the EMPLOYEE_ID
     */
    public Long getEmployeeId() {
        return (Long) getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as attribute value for EMPLOYEE_ID using the alias name EmployeeId.
     * @param value value to set the EMPLOYEE_ID
     */
    public void setEmployeeId(Long value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for FINISHTIME using the alias name Finishtime.
     * @return the FINISHTIME
     */
    public Timestamp getFinishtime() {
        return (Timestamp) getAttributeInternal(FINISHTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for FINISHTIME using the alias name Finishtime.
     * @param value value to set the FINISHTIME
     */
    public void setFinishtime(Timestamp value) {
        setAttributeInternal(FINISHTIME, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId.
     * @return the PROJECT_ID
     */
    public Long getProjectId() {
        return (Long) getAttributeInternal(PROJECTID);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId(Long value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**
     * Gets the attribute value for STARTTIME using the alias name Starttime.
     * @return the STARTTIME
     */
    public Timestamp getStarttime() {
        return (Timestamp) getAttributeInternal(STARTTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for STARTTIME using the alias name Starttime.
     * @param value value to set the STARTTIME
     */
    public void setStarttime(Timestamp value) {
        setAttributeInternal(STARTTIME, value);
    }

    /**
     * Gets the attribute value for NAME using the alias name ProjectName.
     * @return the NAME
     */
    public String getProjectName() {
        return (String) getAttributeInternal(PROJECTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for NAME using the alias name ProjectName.
     * @param value value to set the NAME
     */
    public void setProjectName(String value) {
        setAttributeInternal(PROJECTNAME, value);
    }

    /**
     * Gets the attribute value for PROJECT_ID using the alias name ProjectId1.
     * @return the PROJECT_ID
     */
    public Long getProjectId1() {
        return (Long) getAttributeInternal(PROJECTID1);
    }

    /**
     * Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId1.
     * @param value value to set the PROJECT_ID
     */
    public void setProjectId1(Long value) {
        setAttributeInternal(PROJECTID1, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for EMPLOYEE_ID using the alias name EmployeeId1.
     * @return the EMPLOYEE_ID
     */
    public Long getEmployeeId1() {
        return (Long) getAttributeInternal(EMPLOYEEID1);
    }

    /**
     * Sets <code>value</code> as attribute value for EMPLOYEE_ID using the alias name EmployeeId1.
     * @param value value to set the EMPLOYEE_ID
     */
    public void setEmployeeId1(Long value) {
        setAttributeInternal(EMPLOYEEID1, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for IS_APPROVED using the alias name IsApproved.
     * @return the IS_APPROVED
     */
    public String getIsApproved() {
        return (String) getAttributeInternal(ISAPPROVED);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_APPROVED using the alias name IsApproved.
     * @param value value to set the IS_APPROVED
     */
    public void setIsApproved(String value) {
        setAttributeInternal(ISAPPROVED, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProjectsLookup.
     */
    public RowSet getProjectsLookup() {
        return (RowSet) getAttributeInternal(PROJECTSLOOKUP);
    }

    /**
     * Gets the view accessor <code>RowSet</code> EmployeesLookup.
     */
    public RowSet getEmployeesLookup() {
        return (RowSet) getAttributeInternal(EMPLOYEESLOOKUP);
    }
    
    public void approve() {
        getAssignments().approve();
    }
}

